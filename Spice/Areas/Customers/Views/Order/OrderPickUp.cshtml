@model Spice.Models.ViewModels.OrderListViewModel
@using Spice.Utility
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<form method="get">
    <br />
    <br />
    <h2 class="text-info">Order Ready For PickUp : </h2>
    <br />
    <div class="border backgroundWhite">
        <div class="container border border-secondary" style="height:60px;">
            <div class="row container">
                <div class="col-11">
                    <div class="row" style="padding-top:10px;">
                        <div class="col-4">
                            @Html.Editor("searchName",new { htmlAttributes = new {@class = "form-control", @placeholder = "Name...."}})
                        </div>
                        <div class="col-4">
                            @Html.Editor("searchPhone",new { htmlAttributes = new {@class = "form-control", @placeholder = "Phone...."}})
                        </div>
                        <div class="col-4">
                            @Html.Editor("searchEmail",new { htmlAttributes = new {@class = "form-control", @placeholder = "Email...."}})
                        </div>
                    </div>
                </div>
                <div class="col-1">
                    <div class="row" style="padding-top:10px;">
                        <button type="submit" name="submit" class="btn btn-info form-control">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>

            </div>
           
        </div>
        <br />
        <div>
            @if (Model.Orders.Count() > 0)
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            @Html.DisplayNameFor(m => m.Orders[0].orderHeader.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders[0].orderHeader.PickUpName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders[0].orderHeader.ApplicationUser.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders[0].orderHeader.PickUpTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders[0].orderHeader.OrderTotal)
                        </th>
                        <th>
                            Total Items
                        </th>
                        <th></th>

                    </tr>
                    @foreach (var item in Model.Orders)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => item.orderHeader.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.orderHeader.PickUpName)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.orderHeader.ApplicationUser.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.orderHeader.PickUpTime)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.orderHeader.OrderTotal)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.orderDetails.Count)
                            </td>
                            <td>
                                <button type="button" class="btn btn-success anchorDetail" data-id="@item.orderHeader.Id" data-toggle="modal">
                                    <i class="far fa-list-alt"></i> Details
                                </button>

                            </td>
                        </tr>
                    }
                </table>
                <div page-model="@Model.pagingInfo" page-class-enabled="true" page-class="btn border"
                 page-class-normal="btn btn-light" page-class-selected="btn btn-info active"
                 class="btn-group float-end">
                </div>
                <br />
            }
            else
            {
                <p>No Order exists...</p>
            }
        </div>
    </div>
</form>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog-centered modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-success text-light">
                    <div class=" col-10 offset-1">
                        <h5 class="modal-title text-center">Order Details</h5>
                    </div>
                    <div class="col-1">
                        <button type="button" class="float-end btn-outline-secondary close" data-bs-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
                <div class="modal-body justify-content-center" id="myModalContent">
                </div>
              
            </div>
        </div>
    </div>
   


@section scripts
    {
    <script>
        var PostBackURL = '/Customers/Order/GetOrderDetails';
        
        $(function () {
            $(".anchorDetail").click(function () {
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                $.ajax({
                    type: "GET",
                    url: PostBackURL,
                    contentType: "application/json; charset=utf-8",
                    data: { "Id": id },
                    cache: false,
                    dataType: "html",
                    success: function (data) {
                        $('#myModalContent').html(data);
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed");
                    }
                });
            });
           
        });
    </script>
}